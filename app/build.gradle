plugins {
  id 'com.android.application'
  id 'org.jetbrains.kotlin.android'
  alias libs.plugins.roborazzi
}

android {
  compileSdk 34

  namespace "com.zhufucdev.currimate"

  defaultConfig {
    applicationId "com.zhufucdev.currimate"
    minSdk 29
    targetSdk 33
    versionCode 1
    versionName "1.0"
  }

  buildTypes {
    release {
      minifyEnabled true
      shrinkResources true
      signingConfig signingConfigs.debug
      proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
    coreLibraryDesugaringEnabled true
  }
  testOptions {
    unitTests {
      includeAndroidResources true
    }
  }
  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_17.majorVersion
  }
  buildFeatures {
    compose true
  }
  composeOptions {
    kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
  }
  packagingOptions {
    resources {
      excludes += "/META-INF/{AL2.0,LGPL2.1}"
    }
  }
}

dependencies {

  def composeBom = platform(libs.androidx.compose.bom)

  // General compose dependencies
  implementation composeBom
  implementation libs.androidx.activity.compose
  implementation libs.androidx.splashscreen

  // General wear os dependencies
  implementation libs.wear

  // Compose for Wear OS Dependencies
  // NOTE: DO NOT INCLUDE a dependency on androidx.compose.material:material.
  // androidx.wear.compose:compose-material is designed as a replacement not an addition to
  // androidx.compose.material:material. If there are features from that you feel are missing from
  // androidx.wear.compose:compose-material please raise a bug to let us know:
  // https://issuetracker.google.com/issues/new?component=1077552&template=1598429&pli=1
  implementation libs.wear.compose.material

  // Foundation is additive, so you can use the mobile version in your Wear OS app.
  implementation libs.wear.compose.foundation
  implementation(libs.androidx.material.icons.core)

  // Horologist for correct Compose layout
  implementation libs.horologist.composables
  implementation libs.horologist.compose.layout
  implementation libs.horologist.compose.material

  // Watch faces
  implementation libs.wear.watchface
  implementation libs.wear.watchface.data
  implementation libs.wear.watchface.editor
  implementation libs.wear.watchface.style
  implementation libs.wear.watchface.client
  implementation libs.wear.watchface.complications.data.source
  implementation libs.wear.watchface.complications.rendering
  implementation libs.wear.watchface.complications.data

  // Preview Tooling
  implementation libs.compose.ui.tooling.preview
  implementation(libs.androidx.compose.ui.tooling)

  // If you are using Compose Navigation, use the Wear OS version (NOT the
  // androidx.navigation:navigation-compose version), that is, uncomment the line below.
  implementation libs.wear.compose.navigation

  implementation libs.androidx.ui.test.manifest

  coreLibraryDesugaring libs.desugar.jdk.libs

  // Testing
  testImplementation libs.androidx.ui.test.junit4
  testImplementation libs.junit

  androidTestImplementation libs.test.ext.junit
  androidTestImplementation libs.test.espresso.core
  androidTestImplementation libs.compose.ui.test.junit4
  androidTestImplementation composeBom

  debugImplementation libs.compose.ui.tooling
  debugImplementation libs.androidx.ui.test.manifest
  debugImplementation composeBom
}
